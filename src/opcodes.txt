ADC - Add Memory to Accumulator with Carry
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	ADC #$nn	$69	2	2
Absolute	ADC $nnnn	$6D	3	4
X-Indexed Absolute	ADC $nnnn,X	$7D	3	4+p
Y-Indexed Absolute	ADC $nnnn,Y	$79	3	4+p
Zero Page	ADC $nn	$65	2	3
X-Indexed Zero Page	ADC $nn,X	$75	2	4
X-Indexed Zero Page Indirect	ADC ($nn,X)	$61	2	6
Zero Page Indirect Y-Indexed	ADC ($nn),Y	$71	2	5+p

AND - "AND" Memory with Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	AND #$nn	$29	2	2
Absolute	AND $nnnn	$2D	3	4
X-Indexed Absolute	AND $nnnn,X	$3D	3	4+p
Y-Indexed Absolute	AND $nnnn,Y	$39	3	4+p
Zero Page	AND $nn	$25	2	3
X-Indexed Zero Page	AND $nn,X	$35	2	4
X-Indexed Zero Page Indirect	AND ($nn,X)	$21	2	6
Zero Page Indirect Y-Indexed	AND ($nn),Y	$31	2	5+p

ASL - Arithmetic Shift Left
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Accumulator	ASL A	$0A	1	2
Absolute	ASL $nnnn	$0E	3	6
X-Indexed Absolute	ASL $nnnn,X	$1E	3	7
Zero Page	ASL $nn	$06	2	5
X-Indexed Zero Page	ASL $nn,X	$16	2	6

BCC - Branch on Carry Clear
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BCC $nnnn	$90	2	2+t+p

BCS - Branch on Carry Set
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BCS $nnnn	$B0	2	2+t+p

BEQ - Branch on Result Zero
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BEQ $nnnn	$F0	2	2+t+p

BIT - Test Bits in Memory with Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	BIT $nnnn	$2C	3	4
Zero Page	BIT $nn	$24	2	3

BMI - Branch on Result Minus
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BMI $nnnn	$30	2	2+t+p

BNE - Branch on Result Not Zero
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BNE $nnnn	$D0	2	2+t+p

BPL - Branch on Result Plus
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BPL $nnnn	$10	2	2+t+p

BRK - Break Command
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	BRK 	$00	1	7

BVC - Branch on Overflow Clear
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BVC $nnnn	$50	2	2+t+p

BVS - Branch on Overflow Set
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Relative	BVS $nnnn	$70	2	2+t+p

CLC - Clear Carry Flag
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	CLC 	$18	1	2

CLD - Clear Decimal Mode
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	CLD 	$D8	1	2

CLI - Clear Interrupt Disable
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	CLI 	$58	1	2

CLV - Clear Overflow Flag
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	CLV 	$B8	1	2

CMP - Compare Memory and Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	CMP #$nn	$C9	2	2
Absolute	CMP $nnnn	$CD	3	4
X-Indexed Absolute	CMP $nnnn,X	$DD	3	4+p
Y-Indexed Absolute	CMP $nnnn,Y	$D9	3	4+p
Zero Page	CMP $nn	$C5	2	3
X-Indexed Zero Page	CMP $nn,X	$D5	2	4
X-Indexed Zero Page Indirect	CMP ($nn,X)	$C1	2	6
Zero Page Indirect Y-Indexed	CMP ($nn),Y	$D1	2	5+p

CPX - Compare Index Register X To Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	CPX #$nn	$E0	2	2
Absolute	CPX $nnnn	$EC	3	4
Zero Page	CPX $nn	$E4	2	3

CPY - Compare Index Register Y To Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	CPY #$nn	$C0	2	2
Absolute	CPY $nnnn	$CC	3	4
Zero Page	CPY $nn	$C4	2	3

DEC - Decrement Memory By One
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	DEC $nnnn	$CE	3	6
X-Indexed Absolute	DEC $nnnn,X	$DE	3	7
Zero Page	DEC $nn	$C6	2	5
X-Indexed Zero Page	DEC $nn,X	$D6	2	6

DEX - Decrement Index Register X By One
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	DEX 	$CA	1	2

DEY - Decrement Index Register Y By One
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	DEY 	$88	1	2

EOR - "Exclusive OR" Memory with Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	EOR #$nn	$49	2	2
Absolute	EOR $nnnn	$4D	3	4
X-Indexed Absolute	EOR $nnnn,X	$5D	3	4+p
Y-Indexed Absolute	EOR $nnnn,Y	$59	3	4+p
Zero Page	EOR $nn	$45	2	3
X-Indexed Zero Page	EOR $nn,X	$55	2	4
X-Indexed Zero Page Indirect	EOR ($nn,X)	$41	2	6
Zero Page Indirect Y-Indexed	EOR ($nn),Y	$51	2	5+p

INC - Increment Memory By One
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	INC $nnnn	$EE	3	6
X-Indexed Absolute	INC $nnnn,X	$FE	3	7
Zero Page	INC $nn	$E6	2	5
X-Indexed Zero Page	INC $nn,X	$F6	2	6

INX - Increment Index Register X By One
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	INX 	$E8	1	2

INY - Increment Index Register Y By One
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	INY 	$C8	1	2

JMP - JMP Indirect
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	JMP $nnnn	$4C	3	3
Absolute Indirect	JMP ($nnnn)	$6C	3	5

JSR - Jump To Subroutine
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	JSR $nnnn	$20	3	6

LDA - Load Accumulator with Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	LDA #$nn	$A9	2	2
Absolute	LDA $nnnn	$AD	3	4
X-Indexed Absolute	LDA $nnnn,X	$BD	3	4+p
Y-Indexed Absolute	LDA $nnnn,Y	$B9	3	4+p
Zero Page	LDA $nn	$A5	2	3
X-Indexed Zero Page	LDA $nn,X	$B5	2	4
X-Indexed Zero Page Indirect	LDA ($nn,X)	$A1	2	6
Zero Page Indirect Y-Indexed	LDA ($nn),Y	$B1	2	5+p

LDX - Load Index Register X From Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	LDX #$nn	$A2	2	2
Absolute	LDX $nnnn	$AE	3	4
Y-Indexed Absolute	LDX $nnnn,Y	$BE	3	4+p
Zero Page	LDX $nn	$A6	2	3
Y-Indexed Zero Page	LDX $nn,Y	$B6	2	4

LDY - Load Index Register Y From Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	LDY #$nn	$A0	2	2
Absolute	LDY $nnnn	$AC	3	4
X-Indexed Absolute	LDY $nnnn,X	$BC	3	4+p
Zero Page	LDY $nn	$A4	2	3
X-Indexed Zero Page	LDY $nn,X	$B4	2	4

LSR - Logical Shift Right
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Accumulator	LSR A	$4A	1	2
Absolute	LSR $nnnn	$4E	3	6
X-Indexed Absolute	LSR $nnnn,X	$5E	3	7
Zero Page	LSR $nn	$46	2	5
X-Indexed Zero Page	LSR $nn,X	$56	2	6

NOP - No Operation
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	NOP 	$EA	1	2

ORA - "OR" Memory with Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	ORA #$nn	$09	2	2
Absolute	ORA $nnnn	$0D	3	4
X-Indexed Absolute	ORA $nnnn,X	$1D	3	4+p
Y-Indexed Absolute	ORA $nnnn,Y	$19	3	4+p
Zero Page	ORA $nn	$05	2	3
X-Indexed Zero Page	ORA $nn,X	$15	2	4
X-Indexed Zero Page Indirect	ORA ($nn,X)	$01	2	6
Zero Page Indirect Y-Indexed	ORA ($nn),Y	$11	2	5+p

PHA - Push Accumulator On Stack
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	PHA 	$48	1	3

PHP - Push Processor Status On Stack
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	PHP 	$08	1	3

PLA - Pull Accumulator From Stack
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	PLA 	$68	1	4

PLP - Pull Processor Status From Stack
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	PLP 	$28	1	4

ROL - Rotate Left
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Accumulator	ROL A	$2A	1	2
Absolute	ROL $nnnn	$2E	3	6
X-Indexed Absolute	ROL $nnnn,X	$3E	3	7
Zero Page	ROL $nn	$26	2	5
X-Indexed Zero Page	ROL $nn,X	$36	2	6

ROR - Rotate Right
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Accumulator	ROR A	$6A	1	2
Absolute	ROR $nnnn	$6E	3	6
X-Indexed Absolute	ROR $nnnn,X	$7E	3	7
Zero Page	ROR $nn	$66	2	5
X-Indexed Zero Page	ROR $nn,X	$76	2	6

RTI - Return From Interrupt
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	RTI 	$40	1	6

RTS - Return From Subroutme
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	RTS 	$60	1	6

SBC - Subtract Memory from Accumulator with Borrow
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Immediate	SBC #$nn	$E9	2	2
Absolute	SBC $nnnn	$ED	3	4
X-Indexed Absolute	SBC $nnnn,X	$FD	3	4+p
Y-Indexed Absolute	SBC $nnnn,Y	$F9	3	4+p
Zero Page	SBC $nn	$E5	2	3
X-Indexed Zero Page	SBC $nn,X	$F5	2	4
X-Indexed Zero Page Indirect	SBC ($nn,X)	$E1	2	6
Zero Page Indirect Y-Indexed	SBC ($nn),Y	$F1	2	5+p

SEC - Set Carry Flag
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	SEC 	$38	1	2

SED - Set Decimal Mode
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	SED 	$F8	1	2

SEI - Set Interrupt Disable
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	SEI 	$78	1	2

STA - Store Accumulator in Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	STA $nnnn	$8D	3	4
X-Indexed Absolute	STA $nnnn,X	$9D	3	5
Y-Indexed Absolute	STA $nnnn,Y	$99	3	5
Zero Page	STA $nn	$85	2	3
X-Indexed Zero Page	STA $nn,X	$95	2	4
X-Indexed Zero Page Indirect	STA ($nn,X)	$81	2	6
Zero Page Indirect Y-Indexed	STA ($nn),Y	$91	2	6

STX - Store Index Register X In Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	STX $nnnn	$8E	3	4
Zero Page	STX $nn	$86	2	3
Y-Indexed Zero Page	STX $nn,Y	$96	2	4

STY - Store Index Register Y In Memory
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Absolute	STY $nnnn	$8C	3	4
Zero Page	STY $nn	$84	2	3
X-Indexed Zero Page	STY $nn,X	$94	2	4

TAX - Transfer Accumulator To Index X
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	TAX 	$AA	1	2

TAY - Transfer Accumula Tor To Index Y
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	TAY 	$A8	1	2

TSX - Transfer Stack Pointer To Index X
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	TSX 	$BA	1	2

TXA - Transfer Index X To Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	TXA 	$8A	1	2

TXS - Transfer Index X To Stack Pointer
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	TXS 	$9A	1	2

TYA - Transfer Index Y To Accumulator
Addressing Mode	Assembly Language Form	Opcode	No. Bytes	No. Cycles
Implied	TYA 	$98	1	2
